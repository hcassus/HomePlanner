defaults: &defaults
  working_directory: ~/hcassus/HomePlanner
  parallelism: 1
  environment:
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
  docker:
  - image: cimg/openjdk:18.0.2-browsers
    environment:
      PG_HOST: localhost
      PG_USER: postgres
  - image: circleci/postgres:10-alpine-ram
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: hrp

version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.0
  heroku: circleci/heroku@1.2.6

jobs:
  build:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dep-{{ .Branch }}-
        - v1-dep-master-
        - v1-dep-
    - run: ./mvnw dependency:go-offline || true
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/.m2
  api_tests:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - restore_cache:
          keys:
          - v1-dep-{{ .Branch }}-
          - v1-dep-master-
          - v1-dep-
      - run: ./mvnw dependency:go-offline || true
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
          - ~/.m2
      - run: ./mvnw -B test surefire-report:report -Dtest=**/api/*
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/html_reports
      - run: find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
      - run: cp -R ./target/site $CIRCLE_TEST_REPORTS/junit/html_reports
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
  ui_tests:
    <<: *defaults
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - restore_cache:
          keys:
          - v1-dep-{{ .Branch }}-
          - v1-dep-master-
          - v1-dep-
      - run: ./mvnw dependency:go-offline || true
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
          - ~/.m2
      - run: ./mvnw -B test surefire-report:report -Dtest=**/ui/tests/*
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/html_reports
      - run: find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
      - run: cp -R ./target/site $CIRCLE_TEST_REPORTS/junit/html_reports
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
  whitebox_tests:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - restore_cache:
          keys:
          - v1-dep-{{ .Branch }}-
          - v1-dep-master-
          - v1-dep-
      - run: ./mvnw dependency:go-offline || true
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
          - ~/.m2
      - run: ./mvnw -B test surefire-report:report -Dtest-exclusions=**/api/*,**/ui/tests/*
      - run: bash <(curl -s https://codecov.io/bash)
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/html_reports
      - run: find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
      - run: cp -R ./target/site $CIRCLE_TEST_REPORTS/junit/html_reports
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
  deploy:
    <<: *defaults
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run: ssh-keyscan -H heroku.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy Master to Heroku
          command: git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - ui_tests:
          requires:
            - build
      - api_tests:
          requires:
            - build
      - whitebox_tests:
          requires:
            - build
      - deploy:
          requires:
              - ui_tests
              - api_tests
              - whitebox_tests
          filters:
            branches:
              only: master

